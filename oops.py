# -*- coding: utf-8 -*-
"""OOPS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12gSLTfjwl033Ge2cXhnmEBc79jfB2tF_
"""

#oops

class HouseDesign:
    def __init__(self, hclor):   #self is current object
        self.color=hclor


# Self is in referal to current object
# self keyword can be change = yes

house1 = HouseDesign("yellow")
house1.color

class HouseDesign:
    def __init__(self, hclor,price):   #self is current object
        self.color=hclor
        self.price=price

    def houseInfo(self):
        print("House Information", self.color, self.price)

house1 = HouseDesign("yellow",600)
house1.houseInfo

class design:
  def __init__(self):
    print("inside constructor",self)

#Inheritance
# feature of oops
# where we inherit members or property of 1 class to another class

class A:          #PARENT CLASS/ SUPER CLASS / BASE CLASS
  Amount =500

class B:          #CHILD CLASS/ SUB / DERIVED CLASS
  Salary =500     #CHILD(PARENT CLASS)

b1=B()
b1.Salary

class Student:
  def __init__(self,name,email):
    self.name=name
    self.email=email

class Teacher(Student):
  def __init__(self,name,email):
    super().__init__(name, email)     #parent class constructor called

t1= Teacher("naina", "naina@gmail.com")
t1.email

class A:
    def __init__(self, num1):
        self.num1 = num1
        print("Class A", num1)

class B(A):
    def __init__(self, num1, num2):
        super().__init__(num1)
        self.num2 = num2
        print("Class B", num2)

class C(B):
    def __init__(self, num1, num2, num3):
        super().__init__(num1, num2)
        self.num3 = num3
        print("Class C", num3)

obj = C(10, 20, 30)